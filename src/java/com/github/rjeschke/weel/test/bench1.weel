// Lua version: Writen by Attractive Chaos; distributed under the MIT license
// Weel conversion: RenÃ© Jeschke

global matrix = {}

func matrix:t(a)
    local m = size(a), n = size(a[1]), x = {};
    for i = 0, n - 1 do
        x[i] = {};
        for j = 0, m - 1 do 
            x[i][j] = a[j][i];
        end
    end
    return x;
end

func matrix:mul(a, b)
    local m = size(a) - 1, n = size(a[0]) - 1, p = size(b[0]) - 1, x = {};
    assert(n == p);
    local c = this->t(b); // transpose for efficiency
    
    for i = 0, m do
        local xi = x[i] = {};
        for j = 0, p do
            local sum = 0, ai = a[i], cj = c[j];

            for k = 0, n do
                sum += ai[k] * cj[k];
            end
            xi[j] = sum;
        end
    end
    return x;
end

func matgen(n)
    local a = {}, tmp = 1 / n / n;
    
    for i = 0, n - 1 do
        a[i] = {};
        for j = 0, n - 1 do
            a[i][j] = tmp * (i - j) * (i + j);
        end
    end
    return a;
end

// Mandelbrot

sub iterat(width, height, imax)
    local x, y, vx, vy, i, zx, zy, tx, ty, tx1, ty1, col, cnum

    par = {-1.5, 0.5, -1.5, 0.5}
    
    x_min = par[0]
    x_max = par[1]
    y_min = par[2]
    y_max = par[3]
    x_step = (x_max - x_min) / width
    y_step = (y_max - y_min) / height
        
    for y = 0, height - 1 do
        vy = y_max + y * y_step
        for x = 0, width - 1 do
            vx = x_min + x * x_step
            zx = 0
            zy = 0

            for i = 0, imax do
                tx = zx + vx
                ty = zy + vy
                tx1 = tx * tx
                ty1 = ty * ty
                zx = tx1 - ty1
                zy = 2 * tx * ty
                
                if (tx1 + ty1) > 4 then
                    break;
                end
            end
        end
    end
end


sub main(args)
    println("Matmul:");
    println("=======");
    local n = size(args) > 0 ? toNum(args[0]) : 100;
    n &= ~1;
    local t = clock();
    a = matrix->mul(matgen(n), matgen(n));
    t = floor((clock() - t) * 100.0 + 0.5) / 100.0;
    println("C: "..a[n/2][n/2]);
    println(t.." sec.");

    println("\nMandelbrot:");
    println("===========");
    t = clock()
    n = size(args) > 1 ? toNum(args[1]) : 1000;
    iterat(n, n, 49)
    t = floor((clock() - t) * 100.0 + 0.5) / 100.0;
    println(t.." sec.");
end
