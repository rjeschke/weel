/*
local a;

println((a = 1) + 2)
println(a);

arr = {0, 1};

println(arr[false ? 0 : 1])

println(1 + 2 * 3 - 7 * 0.5 * 33 / 9.2 + 100 - 12 * 100.1111)

println(strFormat("Hallo %s ... \n this is %d times %f\n", {"world!", 3, 0.5}));
printf("en", "Hallo %s ... this is %08x times %f\n", {"world!", 33232, 0.5});

println(strPadRight(strPadLeft("Hello world!", "+-", 40), "-+/#*", 80));

printf("%C%c%c%c%c %c%c%c%c%c!\n", strChars("helloworld"));

list = {9, 8, 7, 6, 5, 4, 3, 2, 1, 0};

foreach k, v in list do
    println("list["..k.."] = "..v);
end

map = {a = 0, b = 1, c = 1, d = 2, e = 3}
foreach k, v in map do
    println("map["..k.."] = "..v);
end

list2 = list ++ map;
foreach k, v in list2 do
    println("list2["..k.."] = "..v);
end

map ++= list
foreach k, v in map do
    println("map["..k.."] = "..v);
end

local b = 2, c = 3, d = 4;

//printf("en", "Time: %.5f seconds\n", {t0})

t0 = clock();
for i = 0, 16777215 * 40 do
    a = 2 * b;
end
t0 = clock() - t0;
printf("en", "Time: %.5f seconds\n", {t0})

t0 = clock();
for i = 0, 16777215 * 40 do
    a = b * 2;
end
t0 = clock() - t0;
printf("en", "Time: %.5f seconds\n", {t0})
*/

a = compile(
"@{:
    println('Hello '..this..'!');
}")

a("World");
println("Test!");

arr = {}

@{ arr:test ()
    println(this);
    return 0;
}

arr.test("Hallo");

private sub test2(a)
    println(a);
    error("It failed!");
end

//println(test2);

ret = pcall(test2, "Hello");
println(ret[1]);

ret = pcall(compile, "@{ a = 10 }");
println(ret[1]);
