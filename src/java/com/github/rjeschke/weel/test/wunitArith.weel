t = {};

/*
 * Just some testing ... nothing serious right now.
 */

wUnitTestcase(t, "Arithmetic tests.");

sub t:testNumbers()
    this->assert(0b10101010 == 170 && 0B10101010 == 170, "Binary");
    this->assert(0xaa == 170 && 0XAA == 170, "Hexadecimal");
    this->assert(0o252 == 170 && 0O252 == 170, "Octal");
end


sub t:testBasics()
    this->assert(1 + -1 == 0, "1 + -1 == 0");
    this->throws(
        @{
            var = null;
            a = var[0];
        }, "Indexing a non-map value should throw");
    
    this->noThrow(
        @{
            var = 1;
            var += "One";
        }, "Adding a String to a number is Ok.");
        
end

func t:createClosure(var)
    return @{
        return var;
    };
end

func t:createClosure2()
    local counter = 0;
    return @{
        ret = counter;
        counter += 1;
        return ret;
    };
end

sub t:testClosures()
    this->assert(this->createClosure("String")() == "String", "Closure vars.");
    
    f = this->createClosure2();
    f();
    this->assert(f() == 1, "Closure vars persistence.");
end
